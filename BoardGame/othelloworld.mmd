classDiagram
    OthelloGameController --> Board : manages
    OthelloGameController --> Player : manages
    Board --> Piece : contains
    Board --> Position : uses
    Player --> Piece : owns
    Player --> PieceColor
    Piece --> PieceColor

    class Display {
        + DisplayBoard(): void
        + DisplayScores(): void
        + DisplayGameStatus(): void
        + DisplayCurrentPlayer(): void
    }

    class OthelloGameController {
        - Board board
        - Player[] players
        - int currentPlayer
        + OthelloGameController()
        + StartGame(): void
        + SwitchTurn(): void
        + GetWinner(): Player
        + EndGame(): void
        + Func IsValidMove<int, int, Player, bool> ()
        + PlacePiece(int row, int col, Player player): void
        + Action<> FlipPieces()
        + CountPieces(char symbol): int
    }

    class IBoard {
        <<Interface>>
        - Piece[,] grid
        + Board(int size)
        + InitializeBoard(): void
    }

    class Board {
        - Piece[,] grid
        + Board(int size)
        + InitializeBoard(): void
        + GetBoard()
        + GetFlippablePieces(int row, int col, Player player): bool
        + GetValidMoves(Player player): List~Position~
    }

    class Piece {
        - PieceColor Color
        + Position Position
        + Piece(PieceColor color)
    }

    class Player {
        - PieceColor Color
        - int score
        + Player(PieceColor color)
        + GetNumberOfPieces(Board board): int
    }

    class Position {
        <<struct>>
        int Row
        int Col
    }

    class PieceColor {
        <<enum>>
        Black
        White
    }


%% Rules:

%% 2 players (Black & White), on 8x8 board.

%% Initial board: 4 pieces at the center.

%% Black moves first.

%% Black (White) place a black (white) piece on the board, 
%% in such a way that there is at least one straight 
%% (horizontal, vertical, or diagonal) occupied line 
%% between the new piece and another black (white) piece, 
%% with one or more contiguous white (black) pieces between them.

%% After placing the piece, 
%% Black (White) flips all white pieces lying on a straight line
%% between the new piece and any existing black (white) pieces.

%% All flipped pieces are now black (white).

%% Players alternate taking turns.

%% If a player does not have any valid moves,
%% play passes back to the other player.

%% When neither player can move, the game ends.

%% A game of Othello may end before the board is completely filled.

%% The player with the most pieces on the board at the end of the game wins.

%% If both players have the same number of pieces, then the game is a draw.
